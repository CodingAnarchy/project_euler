"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
"""

from math import sqrt, floor, log

golden = (1 + 5 ** 0.5) / 2


def nFib(f):
    return int(floor(log(f * sqrt(5), golden) + 0.5))


def even_sum(f):
    k = nFib(f) / 3
    phi = golden ** 3
    psi = (-golden) ** (-3)
    return (1 / sqrt(5)) * (phi * (1 - phi ** k) / (1 - phi) - psi * (1 - psi ** k) / (1 - psi))

print even_sum(4000000)